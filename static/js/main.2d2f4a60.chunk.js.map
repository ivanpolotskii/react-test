{"version":3,"sources":["components/Navbar/navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/header.module.css","components/Profile/profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.jsx","components/Navbar/Nav.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","s","header","src","Nav","nav","item","to","activeClassName","active","Post","props","alt","message","likesCount","MyPosts","postsElements","id","map","p","myposts","posts","ProfileInfo","content","Profile","DialogItem","name","Message","Dialogs","dialogsElements","d","messagesElements","m","dialogs","dialogs_item","messages","App","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.2d2f4a60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navbar_nav__8G-L2\",\"item\":\"navbar_item__fIhkB\",\"active\":\"navbar_active__TMfWK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3m7Nf\",\"dialogs_item\":\"Dialogs_dialogs_item__ccVuB\",\"messages\":\"Dialogs_messages__3xAoj\",\"active\":\"Dialogs_active__21zr_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__1Iqxt\",\"myposts\":\"MyPosts_myposts__1qXCy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2clFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"profile_content__3NGxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__wV78T\"};","import React from 'react';\r\nimport s from './header.module.css';\r\nfunction Header(){\r\n    return(\r\n        <header className={s.header}>\r\n            <img src='https://ryazan.radiostuff.ru/wa-data/public/shop/brands/31125/31125.jpg' />\r\n        </header>\r\n    );\r\n};\r\nexport default Header;","import React from 'react';\r\nimport s from './navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/news\" activeClassName={s.active}>News</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink></div>\r\n        </nav>\r\n    );\r\n};\r\nexport default Nav;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n    return (        \r\n        <div className={s.item}>\r\n            <img src=\"https://avatars.mds.yandex.net/get-pdb/2269311/6e8a6e40-91b1-4936-8dba-21506ee1f723/s1200?webp=false\" alt=\"\"/>\r\n            {props.message} <br/>\r\n            likes:{props.likesCount}\r\n        </div>   \r\n    );\r\n};\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nfunction MyPosts() {\r\n\r\n    let posts = [\r\n        {id: '1', message: 'Hi how are you', likesCount:'0'},\r\n        {id: '2', message: 'My first post', likesCount:'0'},\r\n        {id: '2', message: 'My first post', likesCount:'0'},\r\n        {id: '2', message: 'My first post', likesCount:'0'},\r\n        {id: '2', message: 'My first post', likesCount:'0'},\r\n        {id: '2', message: 'My first post', likesCount:'0'},\r\n        {id: '2', message: 'My first post', likesCount:'0'},\r\n        {id: '2', message: 'My first post', likesCount:'0'},\r\n        {id: '2', message: 'My first post', likesCount:'0'},\r\n        {id: '2', message: 'My first post', likesCount:'0'},\r\n        {id: '2', message: 'My first post', likesCount:'0'},\r\n        {id: '2', message: 'My first post', likesCount:'0'},\r\n        {id: '2', message: 'My first post', likesCount:'0'},\r\n    ]\r\n\r\n    let postsElements = posts.map(p=> <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    return (\r\n        <div className={s.myposts}>\r\n            My posts\r\n            <div>\r\n                <div>\r\n                    <textarea></textarea>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nfunction ProfileInfo() {\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <img src='https://www.kencosecurity.com/images/uploads/2015/11/Montana.jpg' />\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nfunction Profile() {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo/>\r\n            <MyPosts/>\r\n        </div>\r\n    );\r\n};\r\nexport default Profile;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {BrowserRouter, NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <NavLink to={`/dialogs/${props.id}`} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {BrowserRouter, NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport {BrowserRouter, NavLink} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport Route from \"react-router-dom/es/Route\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogs = [\r\n        {id: '1', name: 'Dimych'},\r\n        {id: '2', name: 'Andrew'},\r\n        {id: '3', name: 'Vasya'},\r\n        {id: '4', name: 'Chel'},\r\n        {id: '5', name: 'echo'},\r\n    ];\r\n\r\n\r\n    let dialogsElements = dialogs.map(d => (\r\n\r\n        <DialogItem name={d.name} id={d.id}/>\r\n\r\n    ))\r\n\r\n    let messages = [\r\n        {id: '1', message: 'Hi ksta'},\r\n        {id: '2', message: 'smert'},\r\n        {id: '3', message: 'ban'},\r\n        {id: '4', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n        {id: '5', message: 'Hi ksta'},\r\n\r\n    ];\r\n\r\n    let messagesElements = messages.map(m => <Message message={m.message}/>)\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogs_item}>\r\n\r\n                    {dialogsElements}\r\n\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\n\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Nav from './components/Navbar/Nav';\nimport Profile from './components/Profile/Profile';\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Nav/>\n\n                <div className=\"app-wrapper-content\">\n                    <Route path=\"/dialogs\" render={()=>(<Dialogs/>)}/>\n                    <Route path=\"/profile\" render={()=>(<Profile/>)}/>\n                </div>\n\n            </div>\n        </BrowserRouter>\n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}